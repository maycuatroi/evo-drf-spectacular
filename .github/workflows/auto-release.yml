name: Auto Release After CI

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - master  # Only auto-release from master branch

jobs:
  auto-bump-and-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Get current version
        id: get_version
        run: |
          CURRENT_VERSION=$(python -c "import re; content = open('drf_spectacular/__init__.py').read(); print(re.search(r'__version__ = ['\"]([^'\"]+)['\"]', content).group(1))")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
      
      - name: Bump patch version
        id: bump_version
        run: |
          CURRENT_VERSION="${{ steps.get_version.outputs.current_version }}"
          # Split version into major.minor.patch
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          # Increment patch version
          NEW_PATCH=$((patch + 1))
          NEW_VERSION="$major.$minor.$NEW_PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"
      
      - name: Check if version already exists
        id: check_tag
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          if git rev-parse "$NEW_VERSION" >/dev/null 2>&1; then
            echo "Version $NEW_VERSION already exists as a tag"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version $NEW_VERSION does not exist"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Update version in __init__.py
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          sed -i "s/__version__ = .*/__version__ = '$NEW_VERSION'/" drf_spectacular/__init__.py
      
      - name: Commit version bump
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          git add drf_spectacular/__init__.py
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
      
      - name: Push changes
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          git push origin master
      
      - name: Create and push tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          git tag "$NEW_VERSION"
          git push origin "$NEW_VERSION"
      
      - name: Trigger release workflow
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          echo "Tag created successfully. The release workflow will be triggered automatically."